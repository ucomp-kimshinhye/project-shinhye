/*
 * btn system reset
*/

input.btn,
button.btn {
	overflow: visible;
	margin: 0;
	padding: 0;
	cursor: pointer;
	border: hidden;
	background-color: transparent;
	appearance: none;
}

.btn svg {
	display: block;
	position: relative;
	top: 0;
	left: 0;
}

$btn-module-a-accent: (
	normal-00: color(base, 100),
	normal-01: color(base, 080),
	normal-02: color(base, 060),
	normal-03: color(base, 040),
	normal-10: color(base, 000),
	
	accent-01: color(primary, 050),
	accent-02: color(secondary, 010),
	accent-03: color(secondary, 020),
	accent-04: color(secondary, 030),
);

$btn-module-a-outline: (
	'small-2x'		16rem 1.25,
	'small-1x'		18rem 1.25,
	'small'			20rem 1.50,
	'medium'		24rem 1.50,
	'large'			28rem 1.25,
	'large-1x'		32rem 1.50,
);

// btn module-a reset
a.btn.module-a {
	text-decoration: none;
}

.btn.module-a {
	// general
	display: inline-flex;
	align-items: center;
	justify-content: center;
	@include font((family: default)...);

	.btn-text {
		display: flex;
		align-items: center;
		justify-content: center;
		text-align: center;
	}

	// accent
	@each $name, $color in $btn-module-a-accent {
		&.#{$name} {
			color: $color;
		}
	}

	// outline
	@each $name, $line-height, $font-size in $btn-module-a-outline {
		&.#{$name} {
			line-height: $line-height;
			font-size: calc($line-height / $font-size);
		}
	}
}



/*
 * btn module-b system
 */

/*
 * @ module-b accent
 *
 * @ $text-color
 * @ $border-color
 * @ $background-color
*/
$btn-module-b-accent: (
	'normal-00': (
		'none' color(normal, 100) transparent transparent,
		'line' color(normal, 100) color(normal, 100) color(normal, 000),
		'fill' color(normal, 000) color(normal, 100) color(normal, 100),
	),
	'normal-01': (
		'none' color(normal, 010) transparent transparent,
		'line' color(normal, 010) color(normal, 010) color(normal, 000),
		'fill' color(normal, 000) color(normal, 010) color(normal, 010),
	),
	'normal-02': (
		'none' color(normal, 020) transparent transparent,
		'line' color(normal, 020) color(normal, 020) color(normal, 000),
		'fill' color(normal, 000) color(normal, 020) color(normal, 020),
	),
	'normal-03': (
		'none' color(normal, 020) transparent transparent,
		'line' color(normal, 020) color(normal, 030) color(normal, 000),
		'fill' color(normal, 000) color(normal, 030) color(normal, 030),
	),
	'normal-04': (
		'none' color(normal, 020) transparent transparent,
		'line' color(normal, 020) color(normal, 040) color(normal, 000),
		'fill' color(normal, 020) color(normal, 040) color(normal, 040),
	),
	'accent-01': (
		'none' color(accent, 010) transparent transparent,
		'line' color(accent, 010) color(accent, 010) color(accent, 000),
		'fill' color(accent, 000) color(accent, 010) color(accent, 010),
	),
	'accent-02': (
		'none' color(accent, 020) transparent transparent,
		'line' color(accent, 020) color(accent, 020) color(accent, 000),
		'fill' color(accent, 000) color(accent, 020) color(accent, 020),
	)
);

/*
 * module-b outline
 *
 * @ $height
 * @ $line-height
 * @ $font-size
 * @ $font-weight
 * @ $border-width
 */  
$btn-module-b-outline: (
	'small-1x'		24rem 16rem 1.25 700 1rem,
	'small'			28rem 18rem 1.50 700 1rem,
	'medium'		32rem 20rem 1.50 700 1rem,
	'large'			40rem 20rem 1.50 700 1rem,
	'large-1x'		48rem 20rem 1.25 700 1rem,
	'large-2x'		56rem 24rem 1.50 700 1rem,
);

// btn module-b reset
 a.btn.module-b {
	 text-decoration: none;
 }

 .btn.module-b {
	// general
	display: inline-flex;
	align-items: center;
	justify-content: center;
	@include font((family: default)...);
	box-sizing: border-box;
	border-style: solid;

	&.style-b {
		border-radius: 4rem;
	}

	&.disabled {
		color: color(base, 020);
		border-color: color(base, 010);
		background-color: color(base, 010);
		pointer-events: none;
	}

	.btn-text {
		display: flex;
		align-items: center;
		justify-content: center;
		white-space: nowrap;
		text-align: center;
	}

	// icon
	// 1. 아이콘의 유무는 특정 클래스명으로 한다.
	// 2. 아이콘의 위치는 특정 클래스명으로 한다.
	// 3. 아이콘의 종류는 지정한 아이콘셋(클래스명)으로 한다.
	// 4. 아이콘의 사이즈는 outline별로 달라야 한다.
	//		1) 행간에 맞춘다.
	//		2) 별도의 사이즈를 지정한다.
	// 5. 무조건 중앙에 또는 상단 기준을 택일
	// 6. accent에 따라 컬러를 다르게 한다.

	&[class*=symbol-ltr-] .btn-text::before,
	&[class*=symbol-rtl-] .btn-text::after {
		content: '';
		display: block;
		background-repeat: no-repeat;
		background-size: cover;
	}

	// accent
	@each $accent-name in $btn-module-b-accent {
		&.#{nth($accent-name, 1)} {

			// @debug "divider offset: #{nth($accent-name, 1)}";
			@each $type-name, $color, $border-color, $background-color in map-get($btn-module-b-accent, nth($accent-name, 1)) {
				&.type-#{$type-name}:not(.disabled) {
					color: $color;
					border-color: $border-color;
					background-color: $background-color;
					
					@each $icon-name, $icon in $symbol-list {
						&.symbol-ltr-#{$icon-name} {.btn-text {&::before {background-image: icon($icon-name, $color);}}}
						&.symbol-rtl-#{$icon-name} {.btn-text {&::after {background-image: icon($icon-name, $color);}}}
					}
				}
			}
		}
	}

	// outline
	@each $name, $height, $line-height, $font-size, $font-weight, $border-width in $btn-module-b-outline {
		&.#{$name} {
			padding-right: $height * 0.5;
			padding-left: $height * 0.5;
			height: $height;

			font-weight: $font-weight;
			line-height: $line-height;
			font-size: calc($line-height / $font-size);
			border-width: $border-width;

			&.style-c {
				border-radius: $height * 0.5;
			}

			// icon
			&[class*=symbol-ltr-] .btn-text::before,
			&[class*=symbol-rtl-] .btn-text::after {
				width: $line-height;
				min-width: $line-height;
				height: $line-height;
			}

			
			&[class*="symbol-ltr"] {
				padding-left: ($height * 0.5) - ($line-height * 0.25);
				.btn-text {
					&::before {
						margin-right: $line-height * 0.1;
					}
				}
			}

			&[class*="symbol-rtl"] {
				padding-right: ($height * 0.5) - ($line-height * 0.25);
				.btn-text {
					&::after {
						margin-left: $line-height * 0.1;
					}
				}
			}
		}
	}
}



/*
 * btn module-ico system
 */

/*
 * @ module-b accent
 *
 * @ $text-color
 * @ $border-color
 * @ $background-color
*/
$btn-module-ico-accent: (
	'normal-01': (
		'none' color(normal, 010) transparent transparent,
		'line' color(normal, 010) color(normal, 010) color(normal, 000),
		'fill' color(normal, 000) color(normal, 010) color(normal, 010),
	),
	'normal-02': (
		'none' color(normal, 020) transparent transparent,
		'line' color(normal, 020) color(normal, 020) color(normal, 000),
		'fill' color(normal, 000) color(normal, 020) color(normal, 020),
	),
	'normal-03': (
		'none' color(normal, 030) transparent transparent,
		'line' color(normal, 030) color(normal, 030) color(normal, 000),
		'fill' color(normal, 000) color(normal, 030) color(normal, 030),
	),
	'accent-01': (
		'none' color(accent, 010) transparent transparent,
		'line' color(accent, 010) color(accent, 010) color(accent, 000),
		'fill' color(accent, 000) color(accent, 010) color(accent, 010),
	),
	'accent-02': (
		'none' color(accent, 020) transparent transparent,
		'line' color(accent, 020) color(accent, 020) color(accent, 000),
		'fill' color(accent, 000) color(accent, 020) color(accent, 020),
	)
);

.btn.module-ico {
	display: inline-flex;

	// accent
	@each $accent-name in $btn-module-ico-accent {
		&.#{nth($accent-name, 1)} {
			// @debug "divider offset: #{nth($accent-name, 1)}";
			@each $type-name, $color, $border-color, $background-color in map-get($btn-module-ico-accent, nth($accent-name, 1)) {
				&.type-#{$type-name}:not(.disabled) {
					svg {
						fill: $color;
					}
					background-color: $background-color;
				}
			}
		}
	}

	// outline
	@each $name, $height, $line-height, $font-size, $font-weight, $border-width in $btn-module-b-outline {
		&.#{$name} {
			svg {
				flex-shrink: 0;
				width: $height;
				height: $height;
			}
		}
	}
}







































// button-display
.button-display.module-a {
	display: flex;

	.button-area {
		display: flex;
	}

	// style-a
	&.style-a {
		.button-area {
			.btn.flex {
				flex: 1 1 100%;
				width: 100%;
			}

			.btn:not(.flex) {
				flex-shrink: 0;
			}
		}


		&.type-a {
			.button-area {
				flex: 1 1 100%;
				justify-content: flex-start;
			}
		}
	
		&.type-b {
			.button-area {
				flex: 1 1 100%;
				justify-content: flex-end;
			}
		}
	
		&.type-c {
			justify-content: center;
		}

		&.type-d {
			justify-content: space-between;
		}

		.button-area {
			.btn.small {
				&~*,
				&+* {
					margin-left: 6rem;
				}
			}

			.btn.medium {
				&~*,
				&+* {
					margin-left: 8rem;
				}
			}
		
			.btn.large {
				&~*,
				&+* {
					margin-left: 10rem;
				}
			}
		
			.btn.large-1x {
				&~*,
				&+* {
					margin-left: 12rem;
				}
			}
		}
	}

	// style-b
	&.style-b {
		flex-direction: column;

		.button-area {
			flex-shrink: 0;
			flex-direction: column;
			row-gap: 16rem;

			.btn {
				flex-shrink: 0;
			}
		}
	}
}


